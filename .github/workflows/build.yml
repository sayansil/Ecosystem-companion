name: build

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:

  build:
    name: Build
    runs-on: ubuntu-22.04
    env:
      ndk-version: r25c
    steps:
      - uses: actions/checkout@v3


      - name: Get Ecosystem core
        id: get-ecosystem-core
        run: |
          git clone https://github.com/sayansil/Ecosystem -b mobile-compatible
          cd Ecosystem
          commit_hash=$(git rev-parse --short HEAD)
          echo "commit_hash=$commit_hash" >> "$GITHUB_OUTPUT"

      - name: Restore Ecosystem cache
        uses: actions/cache/restore@v3
        id: cache-restore
        with:
          path: native_simulator/android/src/main/jniLibs
          key: cache-${{ env.ndk-version }}-${{ steps.get-ecosystem-core.outputs.commit_hash }}


      - name: Create binary dirs
        if: ${{ !steps.cache-restore.outputs.cache-hit }}
        run: |
          mkdir -p native_simulator/android/src/main/jniLibs/arm64-v8a
          mkdir -p native_simulator/android/src/main/jniLibs/armeabi-v7a


      - name: Get NDK
        if: ${{ !steps.cache-restore.outputs.cache-hit }}
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: ${{ env.ndk-version }}
          add-to-path: true


      - name: Use NDK binaries
        if: ${{ !steps.cache-restore.outputs.cache-hit }}
        env:
          NDK: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          cp $NDK/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/aarch64-linux-android/libc++_shared.so native_simulator/android/src/main/jniLibs/arm64-v8a/libc++_shared.so
          cp $NDK/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/arm-linux-androideabi/libc++_shared.so native_simulator/android/src/main/jniLibs/armeabi-v7a/libc++_shared.so


      - name: Build Ecosystem core
        if: ${{ !steps.cache-restore.outputs.cache-hit }}
        env:
          NDK: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          cd Ecosystem/simulation
          sudo apt install ninja-build
          cmake --preset and-arm64v8a
          cmake --build --preset and-arm64v8a
          cmake --preset and-armeabiv7a-neon 
          cmake --build --preset and-armeabiv7a-neon


      - name: Use Ecosystem binaries
        if: ${{ !steps.cache-restore.outputs.cache-hit }}
        run: |
          cp Ecosystem/simulation/build/and-arm64v8a/src/libecosystem_wrapper.so native_simulator/android/src/main/jniLibs/arm64-v8a/
          cp Ecosystem/simulation/build/and-armeabiv7a-neon/src/libecosystem_wrapper.so native_simulator/android/src/main/jniLibs/armeabi-v7a/


      - name: Save Ecosystem cache
        uses: actions/cache/save@v3
        if: ${{ !steps.cache-restore.outputs.cache-hit }}
        id: cache-save
        with:
          path: native_simulator/android/src/main/jniLibs
          key: cache-${{ env.ndk-version }}-${{ steps.get-ecosystem-core.outputs.commit_hash }}


      - name: Get flutter
        uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: '3.7.5'
          channel: 'stable'


      - name: Build debug apk
        run: flutter build apk --debug


      - name: Get apk
        run: cp build/app/outputs/flutter-apk/app-debug.apk ecosystem-companion-debug.apk


      - name: Save apk
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Ecosystem Companion - debug build
          path: ecosystem-companion-debug.apk
          retention-days: 2